{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login to the application",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hr@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "serial_number": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt_token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong Email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Serial number does not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Serial number does not match"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout from the application",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/user_by_token": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated user's profile",
                "operationId": "01effeef744a490bfe3b2b050830dcc4",
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No User Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all_clocks": {
            "get": {
                "tags": [
                    "Clock"
                ],
                "summary": "Get All Clock Records",
                "description": "Retrieve all clock-in and clock-out records with optional filters and pagination.",
                "operationId": "getAllClocks",
                "parameters": [
                    {
                        "name": "department",
                        "in": "query",
                        "description": "Filter by department ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "export",
                        "in": "query",
                        "description": "Flag to export the clock records",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Clocks Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "clocks": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 23
                                                            },
                                                            "clock_in": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-25T08:30:00"
                                                            },
                                                            "clock_out": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-25T17:00:00"
                                                            },
                                                            "total_hours": {
                                                                "type": "string",
                                                                "example": "8:30"
                                                            },
                                                            "department": {
                                                                "type": "string",
                                                                "example": "Sales"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "total_pages": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 7
                                                        },
                                                        "total_records": {
                                                            "type": "integer",
                                                            "example": 35
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All Clocks Data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Clocks Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Clocks Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving clock records."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clocks/user/{user}": {
            "get": {
                "tags": [
                    "Clock"
                ],
                "summary": "Get all clock records for a specific user",
                "description": "Retrieves all clock-in and clock-out records for a specific user with pagination and export functionality.",
                "operationId": "getUserClocksById",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user whose clock records are being retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "export",
                        "in": "query",
                        "description": "Flag to export the clock records instead of displaying paginated data",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter parameters to refine the clock records (e.g., by date range, location, etc.)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "date_from=2024-01-01&date_to=2024-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user clock records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ClockInOut"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clocks Data for John Doe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No clocks found for this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Clocks Found For This User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user_clocks": {
            "get": {
                "tags": [
                    "Clock"
                ],
                "summary": "Get clock records of the authenticated user",
                "description": "Retrieves the clock-in and clock-out records for the authenticated user, with optional filtering, pagination, and export capabilities.",
                "operationId": "showUserClocks",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Optional filters to apply to the clock records (e.g., date range, location)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "export",
                        "in": "query",
                        "description": "Optional export format (e.g., CSV, PDF)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved clock records for the authenticated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ClockInOut"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clocks Data for John Doe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No clocks found for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Clocks Found For This User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clock_by_id/{clock}": {
            "get": {
                "tags": [
                    "Clock"
                ],
                "summary": "Get a specific clock record by its ID",
                "description": "Retrieves the details of a specific clock-in and clock-out record by the clock ID.",
                "operationId": "getClockById",
                "parameters": [
                    {
                        "name": "clock",
                        "in": "path",
                        "description": "ID of the clock record to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the clock record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "clock": {
                                            "$ref": "#/components/schemas/ClockInOut"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clock Data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Clock record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clock record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clock_in": {
            "post": {
                "tags": [
                    "Clock"
                ],
                "summary": "User Clock In",
                "description": "Allows a user to clock in at home or site based on location type. When clocking in at a site, latitude and longitude of the user's location is compared with the site's location.",
                "operationId": "clockIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "location_type",
                                    "clock_in"
                                ],
                                "properties": {
                                    "location_type": {
                                        "description": "The location type, either 'home' or 'site'",
                                        "type": "string",
                                        "enum": [
                                            "home",
                                            "site"
                                        ]
                                    },
                                    "clock_in": {
                                        "description": "The clock-in time in 'Y-m-d H:i:s' format",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-09-24 08:00:00"
                                    },
                                    "location_id": {
                                        "description": "Required if location_type is 'site'",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "latitude": {
                                        "description": "User's latitude when clocking in at a site",
                                        "type": "number",
                                        "format": "float",
                                        "example": 31.240397,
                                        "nullable": true
                                    },
                                    "longitude": {
                                        "description": "User's longitude when clocking in at a site",
                                        "type": "number",
                                        "format": "float",
                                        "example": -29.9660127,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clock In Done",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "clock": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "clock_in": {
                                                    "type": "string",
                                                    "example": "2024-09-24 08:00:00"
                                                },
                                                "location_type": {
                                                    "type": "string",
                                                    "example": "site"
                                                },
                                                "location_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "late_arrive": {
                                                    "type": "string",
                                                    "example": "00:05:00"
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 40.712776
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -74.005974
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clock In Done"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or user already clocked in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You have already clocked in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clock_out": {
            "post": {
                "tags": [
                    "Clock"
                ],
                "summary": "User Clock Out",
                "description": "Allows a user to clock out from either home or site. If clocking out from a site, latitude and longitude are required.",
                "operationId": "clockOut",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "clock_out"
                                ],
                                "properties": {
                                    "clock_out": {
                                        "description": "The clock-out time in 'Y-m-d H:i:s' format",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-09-24 17:00:00"
                                    },
                                    "latitude": {
                                        "description": "User's latitude when clocking out at a site",
                                        "type": "number",
                                        "format": "float",
                                        "example": 31.240397,
                                        "nullable": true
                                    },
                                    "longitude": {
                                        "description": "User's longitude when clocking out at a site",
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.9660127,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clock Out Done",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "clock": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "clock_in": {
                                                    "type": "string",
                                                    "example": "2024-09-24 08:00:00"
                                                },
                                                "clock_out": {
                                                    "type": "string",
                                                    "example": "2024-09-24 17:00:00"
                                                },
                                                "location_type": {
                                                    "type": "string",
                                                    "example": "site"
                                                },
                                                "late_arrive": {
                                                    "type": "string",
                                                    "example": "00:05:00"
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 40.712776
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -74.005974
                                                },
                                                "duration": {
                                                    "type": "string",
                                                    "example": "08:00:00"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clock Out Done"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or user is not clocked in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not clocked in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update_clock/user/{user}/clock/{clock}": {
            "post": {
                "tags": [
                    "Clock"
                ],
                "summary": "Update a User's Clock",
                "description": "Allows HR to update an existing clock entry for a specific user. The request body should include updated clock information.",
                "operationId": "updateUserClock",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The ID of the user whose clock is being updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "clock",
                        "in": "path",
                        "description": "The ID of the clock entry to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "clock_in",
                                    "clock_out",
                                    "location_type"
                                ],
                                "properties": {
                                    "clock_in": {
                                        "description": "The updated clock-in time in 'Y-m-d H:i:s' format",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-10-01 08:00"
                                    },
                                    "clock_out": {
                                        "description": "The updated clock-out time in 'Y-m-d H:i:s' format",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-10-01 17:00"
                                    },
                                    "location_type": {
                                        "description": "The location type, either 'home' or 'site'",
                                        "type": "string",
                                        "enum": [
                                            "home",
                                            "site"
                                        ]
                                    },
                                    "location_id": {
                                        "description": "The location ID if the location_type is 'site'",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clock Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "clock": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "clock_in": {
                                                    "type": "string",
                                                    "example": "2024-10-01 08:00:00"
                                                },
                                                "clock_out": {
                                                    "type": "string",
                                                    "example": "2024-10-01 17:00:00"
                                                },
                                                "location_type": {
                                                    "type": "string",
                                                    "example": "site"
                                                },
                                                "location_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "late_arrive": {
                                                    "type": "string",
                                                    "example": "00:05:00"
                                                },
                                                "early_leave": {
                                                    "type": "string",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clock updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Clock or User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No clocks found for this user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clock_in/user/{user}": {
            "post": {
                "tags": [
                    "Clock"
                ],
                "summary": "HR Clock In for a User",
                "description": "Allows HR to clock in on behalf of a user, with conditional location fields based on the location type ('site' or 'home').",
                "operationId": "AddClockByHr",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The ID of the user HR is clocking in for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "clock_in",
                                    "location_type"
                                ],
                                "properties": {
                                    "clock_in": {
                                        "description": "The clock-in time in 'Y-m-d H:i:s' format",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-10-01 08:00:00"
                                    },
                                    "location_type": {
                                        "description": "The location type, either 'home' or 'site'",
                                        "type": "string",
                                        "enum": [
                                            "home",
                                            "site"
                                        ]
                                    },
                                    "location_id": {
                                        "description": "The location ID if clocking in at a site",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clock In Done",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "clock": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "clock_in": {
                                                    "type": "string",
                                                    "example": "2024-10-01 08:00:00"
                                                },
                                                "location_type": {
                                                    "type": "string",
                                                    "example": "site"
                                                },
                                                "location_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "late_arrive": {
                                                    "type": "string",
                                                    "example": "00:05:00"
                                                },
                                                "early_leave": {
                                                    "type": "string",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clock In Done"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or user has an existing clock-in without clocking out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You already have an existing clock-in without clocking out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/departments": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get a list of departments",
                "operationId": "e8478e3a557995e1da564073521762f6",
                "responses": {
                    "200": {
                        "description": "A list of departments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "departments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Department"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No departments found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No departments found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Department"
                ],
                "summary": "Create a new department",
                "operationId": "9a3a8ebf7326b72fd181c15603cdd21e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "HR Department"
                                    },
                                    "is_location_time": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Department created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "department stored successfully"
                                        },
                                        "department": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/departments/{department}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get a department by ID",
                "operationId": "6455234c0c02bb51866fc1cee8736649",
                "parameters": [
                    {
                        "name": "department",
                        "in": "path",
                        "description": "Department ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "department": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Department not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Department"
                ],
                "summary": "Update a department",
                "operationId": "3a5bd15b8089cf7523bedb0ab29e0a2e",
                "parameters": [
                    {
                        "name": "department",
                        "in": "path",
                        "description": "Department ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Department Name"
                                    },
                                    "is_location_time": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Department updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "department updated successfully"
                                        },
                                        "department": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Department not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Department"
                ],
                "summary": "Delete a department",
                "operationId": "31b1591b7f2d3bb59934504ea6019f48",
                "parameters": [
                    {
                        "name": "department",
                        "in": "path",
                        "description": "Department ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "department deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Department not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/department_employees": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get the count of employees per department for a specific year",
                "description": "Retrieve the number of employees in each department up to a given year, or the current year if no year is provided.",
                "operationId": "f38644e3d8491f64fb7776bcb262d0fc",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year to filter employee hiring date (defaults to the current year if not provided)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2024
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with employee count per department",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "departmentEmployeesCounts": {
                                            "type": "object",
                                            "example": {
                                                "software": 15,
                                                "academic": 10,
                                                "graphic": 20
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Count of Employee Departments for the year 2023"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid year provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid year provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No employees found for the given year",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There are no employees found up to the year 2025"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get a list of locations",
                "operationId": "4a95f25c1e13530115fd3fd6961b92de",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for location name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No locations found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No locations Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Create a new location",
                "operationId": "2e940d1dad83fe7c7fb5a308a7f6d84a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, New York, NY"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 31.240397
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -29.9660127
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "07:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location_names": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get list of location names",
                "operationId": "62734dde1298de9044bd20a60da48901",
                "responses": {
                    "200": {
                        "description": "List of location names",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "New York"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/locations/{location}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get a specific location",
                "operationId": "f167a429e4fe99e390b7f6e5fb2a0b0e",
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Update a location",
                "operationId": "7c446ae0921b23a9fb94f5db0beaeb80",
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "San Francisco"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "456 Elm St, San Francisco, CA"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 31.240397
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.9660127
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "07:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "15:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Delete a location",
                "operationId": "b087bde5ca5fc36bf09597126337778c",
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/locations": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get Locations Assigned to a User",
                "description": "Retrieve all locations assigned to a specific user based on their user ID.",
                "operationId": "getLocationAssignedToUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Locations Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Main Office"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Locations Data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving user locations."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/getAllUsers": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "operationId": "69d06b7ed7c718bc2aa529b7ae90db67",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Optional search filter to find users by name or code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users"
                    },
                    "404": {
                        "description": "No users found"
                    }
                }
            }
        },
        "/api/manager_names": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get names of all managers",
                "operationId": "6966b63eddd1cd5ec3d4e1aa9955cd2e",
                "responses": {
                    "200": {
                        "description": "List of manager names retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "managerNames": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "manager_id": {
                                                        "description": "ID of the manager",
                                                        "type": "integer"
                                                    },
                                                    "manager_name": {
                                                        "description": "Name of the manager",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No managers found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No managers found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/create_user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "operationId": "bbc6897def0bdb1c36f09718ccfe0ede",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "phone",
                                    "department_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "01203376559"
                                    },
                                    "contact_phone": {
                                        "type": "string",
                                        "example": "01203376669"
                                    },
                                    "national_id": {
                                        "type": "string",
                                        "example": "30201010214335"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "m"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "image": {
                                        "description": "Profile image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "roles": {
                                        "description": "Roles to assign",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": "employee"
                                    },
                                    "location_id": {
                                        "description": "Location IDs to assign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": 1
                                    },
                                    "work_type_id": {
                                        "description": "Work Type IDs to assign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": 1
                                    },
                                    "salary": {
                                        "description": "User salary",
                                        "type": "number",
                                        "format": "float",
                                        "example": "8000"
                                    },
                                    "working_hours_day": {
                                        "description": "Working hours per day",
                                        "type": "number",
                                        "format": "float",
                                        "example": 8
                                    },
                                    "overtime_hours": {
                                        "description": "Overtime hours worked",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "start_time": {
                                        "description": "Start time of work",
                                        "type": "string",
                                        "format": "time",
                                        "example": "07:00"
                                    },
                                    "end_time": {
                                        "description": "End time of work",
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00"
                                    },
                                    "emp_type": {
                                        "description": "Job title",
                                        "type": "string",
                                        "example": "Graphic Designer"
                                    },
                                    "hiring_date": {
                                        "description": "Hiring date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "User ID",
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "description": "User name",
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "description": "User email",
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "description": "User phone",
                                                            "type": "string"
                                                        },
                                                        "contact_phone": {
                                                            "description": "User contact phone",
                                                            "type": "string"
                                                        },
                                                        "national_id": {
                                                            "description": "User national ID",
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "description": "User gender",
                                                            "type": "string"
                                                        },
                                                        "department_id": {
                                                            "description": "Department ID",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "URL of user image",
                                                            "type": "string"
                                                        },
                                                        "serial_number": {
                                                            "description": "User serial number",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "user_detail": {
                                                    "properties": {
                                                        "salary": {
                                                            "description": "User salary",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "working_hours_day": {
                                                            "description": "Working hours per day",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "hourly_rate": {
                                                            "description": "User hourly rate",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "overtime_hourly_rate": {
                                                            "description": "Overtime hourly rate",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "overtime_hours": {
                                                            "description": "Overtime hours worked",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "start_time": {
                                                            "description": "Start time of work",
                                                            "type": "string",
                                                            "format": "time"
                                                        },
                                                        "end_time": {
                                                            "description": "End time of work",
                                                            "type": "string",
                                                            "format": "time"
                                                        },
                                                        "emp_type": {
                                                            "description": "Employment type",
                                                            "type": "string"
                                                        },
                                                        "hiring_date": {
                                                            "description": "Hiring date",
                                                            "type": "string",
                                                            "format": "date"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to Store User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/import-users-from-excel": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Import users from an Excel file",
                "description": "This endpoint allows you to import multiple users from an Excel file (.xlsx) and validate the data.",
                "operationId": "ceb7a403a13cb7679414a9f05af92279",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Excel file (.xlsx) containing user data",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Users imported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users imported successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file format or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid file format. Please upload an Excel file (.xlsx)."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "End time must be later than start time for user 'John Doe'."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error during processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the file: [error details]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/get_user_by_id/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "operationId": "057eb3d441930b84c4612b402dfbf2ab",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "properties": {
                                                "id": {
                                                    "description": "User ID",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "User name",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "User email",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "User phone",
                                                    "type": "string"
                                                },
                                                "contact_phone": {
                                                    "description": "User contact phone",
                                                    "type": "string"
                                                },
                                                "national_id": {
                                                    "description": "User national ID",
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "description": "User gender",
                                                    "type": "string"
                                                },
                                                "department_id": {
                                                    "description": "Department ID",
                                                    "type": "integer"
                                                },
                                                "image": {
                                                    "description": "URL of user image",
                                                    "type": "string"
                                                },
                                                "serial_number": {
                                                    "description": "User serial number",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/update_user/{user}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update an existing user",
                "operationId": "89f38f1fa121702213abd3759d2a8507",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@test.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "01203376559"
                                    },
                                    "contact_phone": {
                                        "type": "string",
                                        "example": "01203376669"
                                    },
                                    "national_id": {
                                        "type": "string",
                                        "example": "30201010214335"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "m"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "image": {
                                        "description": "Profile image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "salary": {
                                        "description": "User salary",
                                        "type": "number",
                                        "format": "float",
                                        "example": 8000
                                    },
                                    "working_hours_day": {
                                        "description": "Working hours per day",
                                        "type": "number",
                                        "format": "float",
                                        "example": 8
                                    },
                                    "overtime_hours": {
                                        "description": "Overtime hours worked",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "start_time": {
                                        "description": "Start time of work",
                                        "type": "string",
                                        "format": "time",
                                        "example": "07:00:00"
                                    },
                                    "end_time": {
                                        "description": "End time of work",
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00:00"
                                    },
                                    "emp_type": {
                                        "description": "Job title",
                                        "type": "string",
                                        "example": "Graphic Designer"
                                    },
                                    "hiring_date": {
                                        "description": "Hiring date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "User ID",
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "description": "User name",
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "description": "User email",
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "description": "User phone",
                                                            "type": "string"
                                                        },
                                                        "contact_phone": {
                                                            "description": "User contact phone",
                                                            "type": "string"
                                                        },
                                                        "national_id": {
                                                            "description": "User national ID",
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "description": "User gender",
                                                            "type": "string"
                                                        },
                                                        "department_id": {
                                                            "description": "Department ID",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "URL of user image",
                                                            "type": "string"
                                                        },
                                                        "serial_number": {
                                                            "description": "User serial number",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "user_detail": {
                                                    "properties": {
                                                        "salary": {
                                                            "description": "User salary",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "working_hours_day": {
                                                            "description": "Working hours per day",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "hourly_rate": {
                                                            "description": "User hourly rate",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "overtime_hourly_rate": {
                                                            "description": "Overtime hourly rate",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "overtime_hours": {
                                                            "description": "Overtime hours worked",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "start_time": {
                                                            "description": "Start time of work",
                                                            "type": "string",
                                                            "format": "time"
                                                        },
                                                        "end_time": {
                                                            "description": "End time of work",
                                                            "type": "string",
                                                            "format": "time"
                                                        },
                                                        "emp_type": {
                                                            "description": "Employment type",
                                                            "type": "string"
                                                        },
                                                        "hiring_date": {
                                                            "description": "Hiring date",
                                                            "type": "string",
                                                            "format": "date"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to Update User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/delete_user/{user}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "operationId": "2621a3fc0deb1ab72c7c136625e86732",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "description": "User ID",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "User name",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "User email",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "User phone",
                                                    "type": "string"
                                                },
                                                "contact_phone": {
                                                    "description": "User contact phone",
                                                    "type": "string"
                                                },
                                                "national_id": {
                                                    "description": "User national ID",
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "description": "User gender",
                                                    "type": "string"
                                                },
                                                "department_id": {
                                                    "description": "Department ID",
                                                    "type": "integer"
                                                },
                                                "image": {
                                                    "description": "URL of user image",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/users_by_name": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all user names",
                "operationId": "6adb8c86b59b8cf43142ebf3f9177372",
                "responses": {
                    "200": {
                        "description": "List of user names retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "description": "User name",
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UsersName"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employees_per_month": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the employee count per month for a specific year",
                "description": "Retrieve the number of employees hired by month for a given year. Defaults to the current year if no year is provided.",
                "operationId": "f4f2904f65ff23161b19db8d6232b096",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year to filter employee hiring data (defaults to the current year if not provided)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2023
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with the employee count per month",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "employeeCount": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "employee_count": {
                                                        "type": "integer",
                                                        "example": 25
                                                    },
                                                    "custom_month": {
                                                        "type": "string",
                                                        "example": "2023-Feb"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employees count up to the year 2023"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid year provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid year parameter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No employees found for the specified year",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No employees found up to the year 2023"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user_details": {
            "get": {
                "tags": [
                    "UserDetail"
                ],
                "summary": "Get a list of user details",
                "operationId": "7ba25345f266489b257d9686e4022b84",
                "responses": {
                    "200": {
                        "description": "List of user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDetail"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user details found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No User Details Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user_details/{userDetail}": {
            "get": {
                "tags": [
                    "UserDetail"
                ],
                "summary": "Get a specific user detail",
                "operationId": "a10a312497bf1abe97f6d93a6dda27bd",
                "parameters": [
                    {
                        "name": "userDetail",
                        "in": "path",
                        "description": "ID of the user detail",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User detail data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User detail not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Detail Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/work_types": {
            "get": {
                "tags": [
                    "WorkType"
                ],
                "summary": "Get a list of work types",
                "operationId": "e22311875c13f81c41293f8684969ba8",
                "responses": {
                    "200": {
                        "description": "List of work types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkType"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No work types found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No WorkTypes Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "WorkType"
                ],
                "summary": "Create a new work type",
                "operationId": "6bed1826f68310a661b0899d4ef6e96e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Remote"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Work type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/work_types/{workType}": {
            "get": {
                "tags": [
                    "WorkType"
                ],
                "summary": "Get a specific work type",
                "operationId": "853767fe539e2cf8cfbab246d687e680",
                "parameters": [
                    {
                        "name": "workType",
                        "in": "path",
                        "description": "ID of the work type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Work type details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Work type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Work Type Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "WorkType"
                ],
                "summary": "Update an existing work type",
                "operationId": "26a06bab80d5aede74a2ffa43a79a19f",
                "parameters": [
                    {
                        "name": "workType",
                        "in": "path",
                        "description": "ID of the work type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Hybrid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Work type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Work type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Work Type Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "WorkType"
                ],
                "summary": "Delete a work type",
                "operationId": "1017715c037f965cbdf0b2270a584f61",
                "parameters": [
                    {
                        "name": "workType",
                        "in": "path",
                        "description": "ID of the work type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Work type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Work type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Work Type Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employees_workTypes_percentage": {
            "get": {
                "tags": [
                    "WorkType"
                ],
                "summary": "Get the percentage of employees by work type (site/home) for a specific year",
                "description": "Retrieve the percentage of employees assigned to site or home work types for a given year. Defaults to the current year if no year is provided.",
                "operationId": "cdb27177863e07745182a44305e00f8b",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year to filter employee work type data (defaults to the current year if not provided)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2024
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with the percentage of employees by work type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userWorkTypes": {
                                            "properties": {
                                                "site": {
                                                    "type": "number",
                                                    "example": 60.5
                                                },
                                                "home": {
                                                    "type": "number",
                                                    "example": 39.5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Percentage of employee work types up to the year 2023"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid year provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid year provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No employees found for the specified year",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There are no employees found up to the year 2023"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/workTypes": {
            "get": {
                "tags": [
                    "WorkType"
                ],
                "summary": "Get the work types assigned to each user",
                "description": "Retrieve the work types assigned to each user.",
                "operationId": "66c17fdbff69bcf3342e5c8e7a24a93b",
                "responses": {
                    "200": {
                        "description": "Successful response with user work type data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_work_types": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_work_type": {
                                                        "type": "object",
                                                        "example": {
                                                            "user_id": 1,
                                                            "work_type_id": 2
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User WorkType Data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ClockInOut": {
                "title": "Clock In and Out Schema",
                "description": "Schema for clock-in and clock-out records.",
                "properties": {
                    "id": {
                        "description": "Clock record unique identifier",
                        "type": "integer",
                        "example": 1
                    },
                    "clock_in": {
                        "description": "Clock-in timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-25T08:30:00"
                    },
                    "clock_out": {
                        "description": "Clock-out timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-25T17:00:00"
                    },
                    "duration": {
                        "description": "Duration of the work period",
                        "type": "string",
                        "format": "time",
                        "example": "08:30:00"
                    },
                    "location_type": {
                        "description": "Type of location (e.g., on-site, remote)",
                        "type": "string",
                        "example": "on-site"
                    },
                    "late_arrive": {
                        "description": "Late arrival time",
                        "type": "string",
                        "format": "time",
                        "example": "00:10:00"
                    },
                    "early_leave": {
                        "description": "Early leave time",
                        "type": "string",
                        "format": "time",
                        "example": "00:05:00"
                    },
                    "user_id": {
                        "description": "ID of the user who clocked in/out",
                        "type": "integer",
                        "example": 23
                    },
                    "location_id": {
                        "description": "ID of the location where clocking took place",
                        "type": "integer",
                        "example": 5
                    },
                    "created_at": {
                        "description": "Timestamp when the record was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-25T08:30:00"
                    },
                    "updated_at": {
                        "description": "Timestamp when the record was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-25T17:00:00"
                    }
                },
                "type": "object"
            },
            "Department": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "HR Department"
                    },
                    "is_location_time": {
                        "type": "boolean",
                        "example": true
                    },
                    "manager_id": {
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "Location": {
                "required": [
                    "name",
                    "address",
                    "latitude",
                    "longitude",
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "New York"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, New York, NY"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": 31.240397
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 29.9660127
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "07:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "15:00"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-01T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "national_id": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "serial_number": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "department_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserDetail": {
                "required": [
                    "salary",
                    "hourly_rate",
                    "overtime_hourly_rate",
                    "working_hours_day",
                    "overtime_hours",
                    "start_time",
                    "end_time",
                    "emp_type",
                    "hiring_date",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "salary": {
                        "type": "number",
                        "format": "float",
                        "example": 60000
                    },
                    "hourly_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 25
                    },
                    "overtime_hourly_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 37.5
                    },
                    "working_hours_day": {
                        "type": "number",
                        "format": "float",
                        "example": 8
                    },
                    "overtime_hours": {
                        "type": "number",
                        "format": "float",
                        "example": 2
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "08:00:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "17:00:00"
                    },
                    "emp_type": {
                        "type": "string",
                        "example": "full-time"
                    },
                    "hiring_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-01T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "WorkType": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Home"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-01T12:30:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token prefixed with 'Bearer '",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Clock",
            "description": "Clock"
        },
        {
            "name": "Department",
            "description": "Department"
        },
        {
            "name": "Location",
            "description": "Location"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "UserDetail",
            "description": "UserDetail"
        },
        {
            "name": "WorkType",
            "description": "WorkType"
        }
    ]
}